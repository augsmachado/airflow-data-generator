services:
    postgres1:
        image: postgres:15
        container_name: postgres1
        restart: always
        environment:
            POSTGRES_USER: usr1
            POSTGRES_PASSWORD: pwd1
            POSTGRES_DB: db1
        ports:
            - "5433:5432"
        volumes:
            - ./scripts:/scripts
        networks:
            - airflow_net
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U usr1 -d db1"]
            interval: 10s
            timeout: 5s
            retries: 10

    airflow:
        build: .
        container_name: airflow
        restart: always
        depends_on:
            - airflow_db
            - postgres1
        environment:
            - AIRFLOW__CORE__EXECUTOR=LocalExecutor
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow_db:5432/airflow
            - PYTHONPATH=/opt/airflow/.local:/opt/airflow/.local/lib/python3.12/site-packages:$PYTHONPATH
        volumes:
            - ./dags:/opt/airflow/dags
        ports:
            - "8080:8080"
        networks:
            - airflow_net
        entrypoint: >
            /bin/bash -c "
            echo 'Starting Airflow setup...' &&

            echo 'Waiting for the database to be ready...' &&
            while ! pg_isready -h airflow_db -p 5432 -U airflow; do
                echo 'Database not ready, waiting...';
                sleep 5;
            done;

            echo 'Database ready! Running Airflow migrations...' &&
            airflow db init &&
            airflow db upgrade &&

            if ! airflow users list | grep -q 'admin'; then
                echo 'Creating default user...' &&
                airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
            else
                echo 'Admin user already exists, skipping creation.'
            fi

            echo 'Starting Airflow services...' &&
            airflow scheduler & airflow webserver"

    airflow_db:
        image: postgres:15
        container_name: airflow_db
        restart: always
        environment:
            POSTGRES_USER: airflow
            POSTGRES_PASSWORD: airflow
            POSTGRES_DB: airflow
        ports:
            - "5435:5432"
        networks:
            - airflow_net

    metabase:
        image: metabase/metabase:v0.53.5.4
        container_name: metabase
        restart: always
        ports:
            - "3000:3000"
        depends_on:
            metabase_db:
                condition: service_healthy
        environment:
            - MB_DB_TYPE=postgres
            - MB_DB_DBNAME=metabase
            - MB_DB_PORT=5432
            - MB_DB_USER=metabase_usr
            - MB_DB_PASS=metabase_pwd
            - MB_DB_HOST=metabase_db
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
            interval: 30s
            timeout: 10s
            retries: 10
        networks:
            - airflow_net

    metabase_db:
        image: postgres:15
        container_name: metabase_db
        restart: always
        environment:
            POSTGRES_USER: metabase_usr
            POSTGRES_PASSWORD: metabase_pwd
            POSTGRES_DB: metabase
        ports:
            - "5436:5432"
        volumes:
            - ./scripts:/scripts
        networks:
            - airflow_net
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U metabase_usr -d metabase"]
            interval: 10s
            timeout: 5s
            retries: 10

networks:
    airflow_net:
        driver: bridge
