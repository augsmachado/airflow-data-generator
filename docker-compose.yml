services:
    airflow_db:
        image: postgres:15
        container_name: airflow_db
        restart: always
        environment:
            POSTGRES_USER: airflow
            POSTGRES_PASSWORD: airflow
            POSTGRES_DB: airflow
        ports:
            - "5435:5432"
        networks:
            - airflow_net

    postgres1:
        image: postgres:15
        container_name: postgres1
        restart: always
        environment:
            POSTGRES_USER: user1
            POSTGRES_PASSWORD: pass1
            POSTGRES_DB: db1
        ports:
            - "5433:5432"
        networks:
            - airflow_net

    postgres2:
        image: postgres:15
        container_name: postgres2
        restart: always
        environment:
            POSTGRES_USER: user2
            POSTGRES_PASSWORD: pass2
            POSTGRES_DB: db2
        ports:
            - "5434:5432"
        networks:
            - airflow_net

    airflow:
        image: apache/airflow:2.10.5
        container_name: airflow
        restart: always
        depends_on:
            - airflow_db
            - postgres1
            - postgres2
        environment:
            - AIRFLOW__CORE__EXECUTOR=LocalExecutor
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow_db:5432/airflow
        volumes:
            - ./dags:/opt/airflow/dags
            - ./requirements.txt:/requirements.txt
            - ./plugins:/opt/airflow/plugins
        ports:
            - "8080:8080"
        networks:
            - airflow_net
        entrypoint: >
            /bin/bash -c "
            echo 'Starting'
            pip install --upgrade pip &&
            pip install -r /requirements.txt &&
            echo 'Waiting for the database to start...' &&
            while ! pg_isready -h airflow_db -p 5432 -U airflow; do sleep 5; done &&
            echo 'Database ready. Initializing Airflow...' &&
            airflow db init &&
            airflow db upgrade &&
            airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com ||
            echo 'User already exists, continuing...' &&
            airflow scheduler & airflow webserver"

networks:
    airflow_net:
        driver: bridge
